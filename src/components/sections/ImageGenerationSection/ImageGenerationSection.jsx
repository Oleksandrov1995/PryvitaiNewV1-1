import React, { useState, forwardRef, useEffect, useCallback } from "react";
import { useNavigate } from "react-router-dom";
import "./ImageGenerationSection.css";
import { dalleImagePrompt } from "../../../prompts/openai/dalleImagePrompt";
import { API_URLS } from "../../../config/api";
import { downloadImage } from "../../../utils/downloadImage";

const ImageGenerationSection = forwardRef(({ onImageGenerated, scrollToNextSection, formData, onGenerateImageRef }, ref) => {
  const [isGenerating, setIsGenerating] = useState(false);
  const [generatedImageUrl, setGeneratedImageUrl] = useState("");
  const navigate = useNavigate();

  // –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –ø–µ—Ä–µ—Ö–æ–¥—É –¥–æ —Ä–µ–¥–∞–∫—Ç–æ—Ä–∞
  const handleEditImage = () => {
    if (generatedImageUrl) {
      const params = new URLSearchParams({
        imageUrl: generatedImageUrl,
        text: formData.greetingText || ''
      });
      navigate(`/editor?${params.toString()}`);
    }
  };

  const generateImage = useCallback(async () => {
    setIsGenerating(true);
    
    try {
      console.log('FormData –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü—ñ—ó –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è:', formData);
      
      // –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ –≤–∞—à –ø—É–±–ª—ñ—á–Ω–∏–π URL —è–∫ –∑–∞–≥–ª—É—à–∫—É
      let photoUrl = "https://res.cloudinary.com/dnma2ioeb/image/upload/v1754218865/pryvitai-photos/tldl1woyxzaqadwzogx1.jpg";
      
      // –ö—Ä–æ–∫ 1: –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —Ñ–æ—Ç–æ –Ω–∞ Cloudinary (—è–∫—â–æ —î —Ñ–æ—Ç–æ)
      if (formData.photo) {
        // –ü–µ—Ä–µ—Ç–≤–æ—Ä—é—î–º–æ —Ñ–∞–π–ª –≤ base64
        const convertToBase64 = (file) => {
          return new Promise((resolve, reject) => {
            const reader = new FileReader();
            reader.readAsDataURL(file);
            reader.onload = () => resolve(reader.result);
            reader.onerror = (error) => reject(error);
          });
        };

        const photoBase64 = await convertToBase64(formData.photo);
        
        const uploadResponse = await fetch(API_URLS.UPLOAD_PHOTO, {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
          },
          body: JSON.stringify({ 
            photoBase64: photoBase64 
          }),
        });

        if (!uploadResponse.ok) {
          throw new Error('–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—ñ —Ñ–æ—Ç–æ');
        }

        const uploadData = await uploadResponse.json();
        photoUrl = uploadData.url;
        
        console.log('–§–æ—Ç–æ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–æ –Ω–∞ Cloudinary:', photoUrl);
      }
      
      // –ö—Ä–æ–∫ 2: –ì–µ–Ω–µ—Ä–∞—Ü—ñ—è –ø—Ä–æ–º–ø—Ç–∞ –∑ URL —Ñ–æ—Ç–æ
      const formDataWithUrl = {
        ...formData,
        photoUrl: photoUrl
      };
      
      const prompt = dalleImagePrompt(formDataWithUrl);
      console.log('–ü—Ä–æ–º–ø—Ç –¥–ª—è DALL-E:', prompt);
      
      const response = await fetch(API_URLS.GENERATE_IMAGE_PROMPT, {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({ prompt }),
      });

      if (!response.ok) {
        if (response.status === 429) {
          throw new Error('–ü–µ—Ä–µ–≤–∏—â–µ–Ω–æ –ª—ñ–º—ñ—Ç –∑–∞–ø–∏—Ç—ñ–≤. –ë—É–¥—å –ª–∞—Å–∫–∞, —Å–ø—Ä–æ–±—É–π—Ç–µ —á–µ—Ä–µ–∑ –∫—ñ–ª—å–∫–∞ —Ö–≤–∏–ª–∏–Ω.');
        } else if (response.status === 500) {
          throw new Error('–ü–æ–º–∏–ª–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞. –°–ø—Ä–æ–±—É–π—Ç–µ –ø—ñ–∑–Ω—ñ—à–µ.');
        } else if (response.status === 503) {
          throw new Error('–°–µ—Ä–≤—ñ—Å —Ç–∏–º—á–∞—Å–æ–≤–æ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∏–π. –°–ø—Ä–æ–±—É–π—Ç–µ –ø—ñ–∑–Ω—ñ—à–µ.');
        } else {
          throw new Error(`–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü—ñ—ó –ø—Ä–æ–º–ø—Ç–∞: ${response.status} ${response.statusText}`);
        }
      }

      const data = await response.json();
      
      if (data.generatedPrompt) {
        // –ö—Ä–æ–∫ 3: –ì–µ–Ω–µ—Ä–∞—Ü—ñ—è –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è —á–µ—Ä–µ–∑ Make.com webhook
        try {
          console.log('–í—ñ–¥–ø—Ä–∞–≤–ª—è—é –∑–∞–ø–∏—Ç –¥–æ Make.com webhook...');
          
          // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –Ω–∞—è–≤–Ω—ñ—Å—Ç—å –æ–±–æ–≤'—è–∑–∫–æ–≤–∏—Ö –¥–∞–Ω–∏—Ö
          if (!data.generatedPrompt) {
            throw new Error('–í—ñ–¥—Å—É—Ç–Ω—ñ–π –∑–≥–µ–Ω–µ—Ä–æ–≤–∞–Ω–∏–π –ø—Ä–æ–º–ø—Ç');
          }
          
          // –°–ø—Ä–æ–±—É—î–º–æ FormData —Ñ–æ—Ä–º–∞—Ç
          const formDataForMake = new FormData();
          formDataForMake.append('prompt', data.generatedPrompt);
          formDataForMake.append('imageUrl', photoUrl);
          
          if (formDataWithUrl.photo) {
            console.log('‚úÖ –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—é —Ä–µ–∞–ª—å–Ω–µ —Ñ–æ—Ç–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞:', photoUrl);
          } else {
            console.log('‚ö†Ô∏è –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—é –≤–∞—à–µ –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è —è–∫ –∑–∞–≥–ª—É—à–∫—É:', photoUrl);
          }
          
          formDataForMake.append('style', formDataWithUrl.cardStyle || '');
          formDataForMake.append('mood', formDataWithUrl.cardMood || '');
          formDataForMake.append('hobby', formDataWithUrl.hobby || '');
          formDataForMake.append('trait', formDataWithUrl.trait || '');
          formDataForMake.append('greeting', formDataWithUrl.greetingText || '');
          
          const imageGenerationResponse = await fetch('https://hook.eu2.make.com/o8eoc69ifeo4ne9pophf1io4q30wm23c', {
            method: 'POST',
            body: formDataForMake,
          });

          console.log('–°—Ç–∞—Ç—É—Å –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ Make.com:', imageGenerationResponse.status);

          if (imageGenerationResponse.ok) {
            const responseText = await imageGenerationResponse.text();
            console.log('–í—ñ–¥–ø–æ–≤—ñ–¥—å –≤—ñ–¥ Make.com (text):', responseText);
            
            // –Ø–∫—â–æ –≤—ñ–¥–ø–æ–≤—ñ–¥—å - —Ü–µ –ø—Ä–æ—Å—Ç–æ URL –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è
            if (responseText && (responseText.startsWith('http') || responseText.startsWith('"http'))) {
              const generatedImageUrl = responseText.trim().replace(/"/g, '');
              setGeneratedImageUrl(generatedImageUrl);
              
              if (onImageGenerated) {
                onImageGenerated("finalGeneratedImageUrl", generatedImageUrl);
              }
            } else {
              // –°–ø—Ä–æ–±—É—î–º–æ –ø–∞—Ä—Å–∏—Ç–∏ —è–∫ JSON
              try {
                const imageData = JSON.parse(responseText);
                console.log('–î–∞–Ω—ñ –≤—ñ–¥ Make.com (JSON):', imageData);
                
                if (imageData.generatedImageUrl) {
                  setGeneratedImageUrl(imageData.generatedImageUrl);
                  
                  if (onImageGenerated) {
                    onImageGenerated("finalGeneratedImageUrl", imageData.generatedImageUrl);
                  }
                } else {
                  console.warn('Make.com –ø–æ–≤–µ—Ä–Ω—É–≤ –¥–∞–Ω—ñ –±–µ–∑ generatedImageUrl:', imageData);
                }
              } catch (parseError) {
                console.warn('–ù–µ –≤–¥–∞–ª–æ—Å—è –ø–∞—Ä—Å–∏—Ç–∏ –≤—ñ–¥–ø–æ–≤—ñ–¥—å Make.com —è–∫ JSON:', parseError);
              }
            }
          } else {
            const errorText = await imageGenerationResponse.text();
            console.error('‚ùå Make.com –ø–æ–º–∏–ª–∫–∞:', {
              status: imageGenerationResponse.status,
              statusText: imageGenerationResponse.statusText,
              body: errorText,
            });
            
            console.warn('–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü—ñ—ó —Ñ—ñ–Ω–∞–ª—å–Ω–æ–≥–æ –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è —á–µ—Ä–µ–∑ Make.com');
          }
        } catch (makeError) {
          console.error('–ü–æ–º–∏–ª–∫–∞ Make.com webhook:', makeError);
        }
        
        if (onImageGenerated) {
          onImageGenerated("generatedImagePrompt", data.generatedPrompt);
          onImageGenerated("imageUrl", photoUrl);
        }
        
        // –ê–≤—Ç–æ—Å–∫—Ä–æ–ª –ø—ñ—Å–ª—è —É—Å–ø—ñ—à–Ω–æ—ó –≥–µ–Ω–µ—Ä–∞—Ü—ñ—ó
        if (scrollToNextSection) {
          setTimeout(() => scrollToNextSection(), 1000);
        }
      }
      
    } catch (error) {
      console.error('–ü–æ–º–∏–ª–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü—ñ—ó –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è:', error);
    } finally {
      setIsGenerating(false);
    }
  }, [formData, onImageGenerated, scrollToNextSection]);

  const isFormComplete = () => {
    let completedFields = 0;
    
    if (formData.cardStyle) completedFields++;
    if (formData.cardMood) completedFields++;
    if (formData.photo) completedFields++;
    if (formData.gender) completedFields++;
    if (formData.age) completedFields++;
    if (formData.hobby) completedFields++;
    if (formData.greetingText) completedFields++;
    if (formData.greetingSubject) completedFields++;
    if (formData.trait) completedFields++;
    
    return completedFields >= 2;
  };

  // –ü–µ—Ä–µ–¥–∞—î–º–æ —Ñ—É–Ω–∫—Ü—ñ—é generateImage —á–µ—Ä–µ–∑ ref
  useEffect(() => {
    if (onGenerateImageRef) {
      onGenerateImageRef.current = { generateImage, isGenerating };
    }
  }, [generateImage, isGenerating, onGenerateImageRef]);

  // –§—É–Ω–∫—Ü—ñ—è –¥–ª—è —Å–∫–∞—á—É–≤–∞–Ω–Ω—è –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è
  const handleDownloadImage = async () => {
    if (!generatedImageUrl) return;
    
    const filename = `pryvitai-${Date.now()}.png`;
    await downloadImage(generatedImageUrl, filename);
  };




  return (
    <section ref={ref} className="image-generation-section">
      <button 
        onClick={generateImage}
        disabled={isGenerating || !isFormComplete()}
        className={`generate-image-button ${!isFormComplete() ? 'disabled' : ''}`}
      >
        {isGenerating ? (
          <>
            <span className="loading-spinner"></span>
            –ì–µ–Ω–µ—Ä—É—é –ø—Ä–∏–≤—ñ—Ç–∞–π–∫—É
          </>
        ) : (
          'üé® –ó–≥–µ–Ω–µ—Ä—É–≤–∞—Ç–∏ –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è'
        )}
      </button>

      {isGenerating && (
        <div className="generation-time-info">
          <p>–ì–µ–Ω–µ—Ä–∞—Ü—ñ—è –∑–∞–π–º–∞—î –æ—Ä—ñ—î–Ω—Ç–æ–≤–Ω–æ 2-3 —Ö–≤–∏–ª–∏–Ω–∏</p>
        </div>
      )}

      {generatedImageUrl && (
        <div className="final-image-result">
          <p><strong>üñºÔ∏è –§—ñ–Ω–∞–ª—å–Ω–µ –∑–≥–µ–Ω–µ—Ä–æ–≤–∞–Ω–µ –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è:</strong></p>
         
          <div className="image-preview">
            <img src={generatedImageUrl} alt="–ó–≥–µ–Ω–µ—Ä–æ–≤–∞–Ω–µ –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è" className="preview-image" />
          </div>
          <p>üåü –§—ñ–Ω–∞–ª—å–Ω–µ –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è —É—Å–ø—ñ—à–Ω–æ –∑–≥–µ–Ω–µ—Ä–æ–≤–∞–Ω–æ!</p>
          
          <button 
            onClick={handleDownloadImage}
            className="download-button"
          >
            üíæ –ó–±–µ—Ä–µ–≥—Ç–∏ –ø—Ä–∏–≤—ñ—Ç–∞–π–∫—É
          </button>
          
          <button 
            onClick={handleEditImage}
            className="edit-button"
          >
            ‚úèÔ∏è –î–æ–¥–∞—Ç–∏ —Ç–µ–∫—Å—Ç –ø—Ä–∏–≤—ñ—Ç–∞–Ω–Ω—è
          </button>
        </div>
      )}
    </section>
  );
});

export default ImageGenerationSection;
