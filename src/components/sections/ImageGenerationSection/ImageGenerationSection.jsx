import React, { useState, forwardRef } from "react";
import "./ImageGenerationSection.css";
import { dalleImagePrompt } from "../../../prompts/openai/dalleImagePrompt";
import { API_URLS } from "../../../config/api";

const ImageGenerationSection = forwardRef(({ onImageGenerated, scrollToNextSection, formData }, ref) => {
  const [isGenerating, setIsGenerating] = useState(false);
  const [generatedPrompt, setGeneratedPrompt] = useState("");
  const [imageUrl, setImageUrl] = useState("");
  const [generatedImageUrl, setGeneratedImageUrl] = useState("");
  const [currentStep, setCurrentStep] = useState("");
  const [error, setError] = useState("");
  const [makeComStatus, setMakeComStatus] = useState("");

  const generateImage = async () => {
    setIsGenerating(true);
    setError("");
    setGeneratedPrompt("");
    setImageUrl("");
    setGeneratedImageUrl("");
    setCurrentStep("");
    setMakeComStatus("");
    
    try {
      console.log('FormData –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü—ñ—ó –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è:', formData);
      
      // –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ –≤–∞—à –ø—É–±–ª—ñ—á–Ω–∏–π URL —è–∫ –∑–∞–≥–ª—É—à–∫—É
      let photoUrl = "https://res.cloudinary.com/dnma2ioeb/image/upload/v1754218865/pryvitai-photos/tldl1woyxzaqadwzogx1.jpg";
      
      // –ö—Ä–æ–∫ 1: –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —Ñ–æ—Ç–æ –Ω–∞ Cloudinary (—è–∫—â–æ —î —Ñ–æ—Ç–æ)
      if (formData.photo) {
        setCurrentStep("–ó–∞–≤–∞–Ω—Ç–∞–∂—É—é —Ñ–æ—Ç–æ –Ω–∞ Cloudinary...");
        
        // –ü–µ—Ä–µ—Ç–≤–æ—Ä—é—î–º–æ —Ñ–∞–π–ª –≤ base64
        const convertToBase64 = (file) => {
          return new Promise((resolve, reject) => {
            const reader = new FileReader();
            reader.readAsDataURL(file);
            reader.onload = () => resolve(reader.result);
            reader.onerror = (error) => reject(error);
          });
        };

        const photoBase64 = await convertToBase64(formData.photo);
        
        const uploadResponse = await fetch(API_URLS.UPLOAD_PHOTO, {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
          },
          body: JSON.stringify({ 
            photoBase64: photoBase64 
          }),
        });

        if (!uploadResponse.ok) {
          throw new Error('–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—ñ —Ñ–æ—Ç–æ');
        }

        const uploadData = await uploadResponse.json();
        photoUrl = uploadData.url;
        setImageUrl(photoUrl);
        
        console.log('–§–æ—Ç–æ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–æ –Ω–∞ Cloudinary:', photoUrl);
      }
      
      // –ö—Ä–æ–∫ 2: –ì–µ–Ω–µ—Ä–∞—Ü—ñ—è –ø—Ä–æ–º–ø—Ç–∞ –∑ URL —Ñ–æ—Ç–æ
      setCurrentStep("–ì–µ–Ω–µ—Ä—É—é –ø—Ä–æ–º–ø—Ç –¥–ª—è –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è...");
      
      const formDataWithUrl = {
        ...formData,
        photoUrl: photoUrl
      };
      
      const prompt = dalleImagePrompt(formDataWithUrl);
      console.log('–ü—Ä–æ–º–ø—Ç –¥–ª—è DALL-E:', prompt);
      
      const response = await fetch(API_URLS.GENERATE_IMAGE_PROMPT, {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({ prompt }),
      });

      if (!response.ok) {
        throw new Error('–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü—ñ—ó –ø—Ä–æ–º–ø—Ç–∞');
      }

      const data = await response.json();
      
      if (data.generatedPrompt) {
        setGeneratedPrompt(data.generatedPrompt);
        
        // –ö—Ä–æ–∫ 3: –ì–µ–Ω–µ—Ä–∞—Ü—ñ—è –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è —á–µ—Ä–µ–∑ Make.com webhook (–∑–∞–≤–∂–¥–∏, –∑ —Ñ–æ—Ç–æ –∞–±–æ –∑ –∑–∞–≥–ª—É—à–∫–æ—é)
        setCurrentStep("–ì–µ–Ω–µ—Ä—É—é —Ñ—ñ–Ω–∞–ª—å–Ω–µ –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è...");
        setMakeComStatus("–í—ñ–¥–ø—Ä–∞–≤–ª—è—é –∑–∞–ø–∏—Ç –¥–æ Make.com...");
        
        try {
          console.log('–í—ñ–¥–ø—Ä–∞–≤–ª—è—é –∑–∞–ø–∏—Ç –¥–æ Make.com webhook...');
          
          // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –Ω–∞—è–≤–Ω—ñ—Å—Ç—å –æ–±–æ–≤'—è–∑–∫–æ–≤–∏—Ö –¥–∞–Ω–∏—Ö
          if (!data.generatedPrompt) {
            throw new Error('–í—ñ–¥—Å—É—Ç–Ω—ñ–π –∑–≥–µ–Ω–µ—Ä–æ–≤–∞–Ω–∏–π –ø—Ä–æ–º–ø—Ç');
          }
          
          // –°–ø—Ä–æ–±—É—î–º–æ FormData —Ñ–æ—Ä–º–∞—Ç
          const formData = new FormData();
          formData.append('prompt', data.generatedPrompt);
          formData.append('imageUrl', photoUrl); // –∑–∞–≤–∂–¥–∏ –ø–µ—Ä–µ–¥–∞—î–º–æ URL (–∞–±–æ —Ä–µ–∞–ª—å–Ω–µ —Ñ–æ—Ç–æ, –∞–±–æ –ø—É–±–ª—ñ—á–Ω—É –∑–∞–≥–ª—É—à–∫—É)
          
          if (formDataWithUrl.photo) {
            console.log('‚úÖ –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—é —Ä–µ–∞–ª—å–Ω–µ —Ñ–æ—Ç–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞:', photoUrl);
          } else {
            console.log('‚ö†Ô∏è –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—é –≤–∞—à–µ –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è —è–∫ –∑–∞–≥–ª—É—à–∫—É:', photoUrl);
          }
          
          formData.append('style', formDataWithUrl.cardStyle || '');
          formData.append('mood', formDataWithUrl.cardMood || '');
          formData.append('hobby', formDataWithUrl.hobby || '');
          formData.append('trait', formDataWithUrl.trait || '');
          formData.append('greeting', formDataWithUrl.greetingText || '');
          
          console.log('–î–∞–Ω—ñ –¥–ª—è Make.com (FormData):', {
            prompt: data.generatedPrompt,
            imageUrl: photoUrl,
            photoType: formDataWithUrl.photo ? '—Ä–µ–∞–ª—å–Ω–µ —Ñ–æ—Ç–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞' : '–≤–∞—à–∞ –∑–∞–≥–ª—É—à–∫–∞',
            style: formDataWithUrl.cardStyle || '–Ω–µ –≤–∫–∞–∑–∞–Ω–æ',
            mood: formDataWithUrl.cardMood || '–Ω–µ –≤–∫–∞–∑–∞–Ω–æ',
            hobby: formDataWithUrl.hobby || '–Ω–µ –≤–∫–∞–∑–∞–Ω–æ',
            trait: formDataWithUrl.trait || '–Ω–µ –≤–∫–∞–∑–∞–Ω–æ',
            greeting: formDataWithUrl.greetingText || '–Ω–µ –≤–∫–∞–∑–∞–Ω–æ'
          });
          
          console.log('–†–æ–∑–º—ñ—Ä FormData –ø–æ–ª—ñ–≤:');
          for (let [key, value] of formData.entries()) {
            console.log(`${key}: ${typeof value === 'string' ? value.length + ' —Å–∏–º–≤–æ–ª—ñ–≤' : '—Ç–∏–ø: ' + typeof value}`);
          }
          
          const imageGenerationResponse = await fetch('https://hook.eu2.make.com/o8eoc69ifeo4ne9pophf1io4q30wm23c', {
            method: 'POST',
            body: formData, // –≤—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ —è–∫ FormData
          });

          console.log('–°—Ç–∞—Ç—É—Å –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ Make.com:', imageGenerationResponse.status);
          console.log('Headers –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ:', imageGenerationResponse.headers);

          if (imageGenerationResponse.ok) {
            const responseText = await imageGenerationResponse.text();
            console.log('–í—ñ–¥–ø–æ–≤—ñ–¥—å –≤—ñ–¥ Make.com (text):', responseText);
            
            // –Ø–∫—â–æ –≤—ñ–¥–ø–æ–≤—ñ–¥—å - —Ü–µ –ø—Ä–æ—Å—Ç–æ URL –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è
            if (responseText && (responseText.startsWith('http') || responseText.startsWith('"http'))) {
              const generatedImageUrl = responseText.trim().replace(/"/g, ''); // –≤–∏–¥–∞–ª—è—î–º–æ –ª–∞–ø–∫–∏ —è–∫—â–æ —î
              setGeneratedImageUrl(generatedImageUrl);
              setMakeComStatus("‚úÖ –ó–æ–±—Ä–∞–∂–µ–Ω–Ω—è —É—Å–ø—ñ—à–Ω–æ –∑–≥–µ–Ω–µ—Ä–æ–≤–∞–Ω–æ!");
              
              if (onImageGenerated) {
                onImageGenerated("finalGeneratedImageUrl", generatedImageUrl);
              }
            } else {
              // –°–ø—Ä–æ–±—É—î–º–æ –ø–∞—Ä—Å–∏—Ç–∏ —è–∫ JSON
              try {
                const imageData = JSON.parse(responseText);
                console.log('–î–∞–Ω—ñ –≤—ñ–¥ Make.com (JSON):', imageData);
                
                if (imageData.generatedImageUrl) {
                  setGeneratedImageUrl(imageData.generatedImageUrl);
                  setMakeComStatus("‚úÖ –ó–æ–±—Ä–∞–∂–µ–Ω–Ω—è —É—Å–ø—ñ—à–Ω–æ –∑–≥–µ–Ω–µ—Ä–æ–≤–∞–Ω–æ!");
                  
                  if (onImageGenerated) {
                    onImageGenerated("finalGeneratedImageUrl", imageData.generatedImageUrl);
                  }
                } else {
                  console.warn('Make.com –ø–æ–≤–µ—Ä–Ω—É–≤ –¥–∞–Ω—ñ –±–µ–∑ generatedImageUrl:', imageData);
                  setMakeComStatus("‚ö†Ô∏è Make.com –ø–æ–≤–µ—Ä–Ω—É–≤ –≤—ñ–¥–ø–æ–≤—ñ–¥—å –±–µ–∑ URL –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è");
                }
              } catch (parseError) {
                console.warn('–ù–µ –≤–¥–∞–ª–æ—Å—è –ø–∞—Ä—Å–∏—Ç–∏ –≤—ñ–¥–ø–æ–≤—ñ–¥—å Make.com —è–∫ JSON:', parseError);
                setMakeComStatus("‚ö†Ô∏è Make.com –ø–æ–≤–µ—Ä–Ω—É–≤ –Ω–µ—á–∏—Ç–∞–±–µ–ª—å–Ω—É –≤—ñ–¥–ø–æ–≤—ñ–¥—å");
              }
            }
          } else {
            const errorText = await imageGenerationResponse.text();
            console.error('‚ùå Make.com –ø–æ–º–∏–ª–∫–∞:', {
              status: imageGenerationResponse.status,
              statusText: imageGenerationResponse.statusText,
              body: errorText,
              url: imageGenerationResponse.url,
              headers: Object.fromEntries(imageGenerationResponse.headers.entries())
            });
            
            // –ü–æ–∫—Ä–∞—â–µ–Ω–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É
            if (imageGenerationResponse.status === 500) {
              setMakeComStatus(`‚ùå –ü–æ–º–∏–ª–∫–∞ Make.com —Å–µ—Ä–≤–µ—Ä–∞ (500): ${errorText}`);
              console.warn('üîß –ú–æ–∂–ª–∏–≤—ñ –ø—Ä–∏—á–∏–Ω–∏ –ø–æ–º–∏–ª–∫–∏ 500:');
              console.warn('- –ü—Ä–æ–±–ª–µ–º–∞ –∑ –æ–±—Ä–æ–±–∫–æ—é –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è –≤ Make.com');
              console.warn('- –ù–µ–¥–æ—Å—Ç—É–ø–Ω—ñ—Å—Ç—å –∑–æ–≤–Ω—ñ—à–Ω—ñ—Ö API (DALL-E, —Ç–æ—â–æ)');
              console.warn('- –ü–µ—Ä–µ–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è Make.com —Å—Ü–µ–Ω–∞—Ä—ñ—é');
              console.warn('- –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–∏–π —Ñ–æ—Ä–º–∞—Ç –¥–∞–Ω–∏—Ö');
            } else {
              setMakeComStatus(`‚ùå –ü–æ–º–∏–ª–∫–∞ Make.com: ${imageGenerationResponse.status} ${imageGenerationResponse.statusText}`);
            }
            
            console.warn('–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü—ñ—ó —Ñ—ñ–Ω–∞–ª—å–Ω–æ–≥–æ –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è —á–µ—Ä–µ–∑ Make.com');
          }
        } catch (makeError) {
          console.error('–ü–æ–º–∏–ª–∫–∞ Make.com webhook:', makeError);
          console.error('–î–µ—Ç–∞–ª—ñ –ø–æ–º–∏–ª–∫–∏:', {
            name: makeError.name,
            message: makeError.message,
            stack: makeError.stack
          });
          setMakeComStatus(`‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –¥–æ Make.com: ${makeError.message}`);
          // –ù–µ –∑—É–ø–∏–Ω—è—î–º–æ –ø—Ä–æ—Ü–µ—Å, —è–∫—â–æ Make.com –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∏–π
        }
        
        setCurrentStep("–ì–æ—Ç–æ–≤–æ!");
        
        if (onImageGenerated) {
          onImageGenerated("generatedImagePrompt", data.generatedPrompt);
          // –ó–∞–≤–∂–¥–∏ –ø–µ—Ä–µ–¥–∞—î–º–æ imageUrl (–∞–±–æ —Ä–µ–∞–ª—å–Ω–µ —Ñ–æ—Ç–æ, –∞–±–æ –∑–∞–≥–ª—É—à–∫—É)
          onImageGenerated("imageUrl", photoUrl);
        }
        
        // –ê–≤—Ç–æ—Å–∫—Ä–æ–ª –ø—ñ—Å–ª—è —É—Å–ø—ñ—à–Ω–æ—ó –≥–µ–Ω–µ—Ä–∞—Ü—ñ—ó
        if (scrollToNextSection) {
          setTimeout(() => scrollToNextSection(), 1000);
        }
      }
      
    } catch (error) {
      console.error('–ü–æ–º–∏–ª–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü—ñ—ó –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è:', error);
      setError('–í–∏–Ω–∏–∫–ª–∞ –ø–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü—ñ—ó –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è. –°–ø—Ä–æ–±—É–π—Ç–µ —â–µ —Ä–∞–∑.');
      setCurrentStep("");
    } finally {
      setIsGenerating(false);
    }
  };

  const isFormComplete = () => {
    let completedFields = 0;
    
    if (formData.cardStyle) completedFields++;
    if (formData.cardMood) completedFields++;
    if (formData.photo) completedFields++;
    if (formData.gender) completedFields++;
    if (formData.age) completedFields++;
    if (formData.hobby) completedFields++;
    if (formData.greetingText) completedFields++;
    if (formData.greetingSubject) completedFields++;
    if (formData.trait) completedFields++;
    
    return completedFields >= 2;
  };

  return (
    <section ref={ref} className="image-generation-section">
      <button 
        onClick={generateImage}
        disabled={isGenerating || !isFormComplete()}
        className={`generate-image-button ${!isFormComplete() ? 'disabled' : ''}`}
      >
        {isGenerating ? (
          <>
            <span className="loading-spinner"></span>
            –ì–µ–Ω–µ—Ä—É—é –ø—Ä–∏–≤—ñ—Ç–∞–π–∫—É
          </>
        ) : (
          'üé® –ó–≥–µ–Ω–µ—Ä—É–≤–∞—Ç–∏ –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è'
        )}
      </button>

      {generatedImageUrl && (
        <div className="final-image-result">
          <p><strong>üñºÔ∏è –§—ñ–Ω–∞–ª—å–Ω–µ –∑–≥–µ–Ω–µ—Ä–æ–≤–∞–Ω–µ –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è:</strong></p>
         
          <div className="image-preview">
            <img src={generatedImageUrl} alt="–ó–≥–µ–Ω–µ—Ä–æ–≤–∞–Ω–µ –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è" className="preview-image" />
          </div>
          <p>üåü –§—ñ–Ω–∞–ª—å–Ω–µ –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è —É—Å–ø—ñ—à–Ω–æ –∑–≥–µ–Ω–µ—Ä–æ–≤–∞–Ω–æ!</p>
        </div>
      )}
    </section>
  );
});

export default ImageGenerationSection;
